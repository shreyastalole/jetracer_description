<?xml version="1.0"?>
<robot name="jetracer" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Include properties and materials -->
  <xacro:include filename="jetracer_materials.xacro"/>
  <xacro:include filename="jetracer_properties.xacro"/>

  <!-- Base link -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
  </link>

  <!-- Chassis -->
  <link name="chassis">
    <inertial>
      <mass value="${chassis_mass}"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="${chassis_ixx}" ixy="0" ixz="0" 
               iyy="${chassis_iyy}" iyz="0" izz="${chassis_izz}"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>
  </link>

  <joint name="base_to_chassis" type="fixed">
    <parent link="base_link"/>
    <child link="chassis"/>
    <origin xyz="0 0 ${chassis_height/2}" rpy="0 0 0"/>
  </joint>

  <!-- Front wheels (steered) -->
  <xacro:macro name="front_wheel" params="side reflect">
    <link name="front_wheel_${side}">
      <inertial>
        <mass value="${wheel_mass}"/>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <inertia ixx="${wheel_ixx}" ixy="0" ixz="0" 
                 iyy="${wheel_iyy}" iyz="0" izz="${wheel_izz}"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
    </link>

    <link name="front_steering_hinge_${side}">
      <inertial>
        <mass value="0.1"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="0.001" ixy="0" ixz="0" 
                 iyy="0.001" iyz="0" izz="0.001"/>
      </inertial>
    </link>

    <joint name="front_steering_${side}" type="revolute">
      <parent link="chassis"/>
      <child link="front_steering_hinge_${side}"/>
      <origin xyz="${wheelbase/2} ${reflect*track_width/2} ${-chassis_height/2}" rpy="0 0 0"/>
      <axis xyz="0 0 1"/>
      <limit lower="${-max_steering_angle}" upper="${max_steering_angle}" 
             effort="100" velocity="1.0"/>
    </joint>

    <joint name="front_wheel_${side}_joint" type="continuous">
      <parent link="front_steering_hinge_${side}"/>
      <child link="front_wheel_${side}"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <xacro:front_wheel side="left" reflect="1"/>
  <xacro:front_wheel side="right" reflect="-1"/>

  <!-- Rear wheels (driven) -->
  <xacro:macro name="rear_wheel" params="side reflect">
    <link name="rear_wheel_${side}">
      <inertial>
        <mass value="${wheel_mass}"/>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <inertia ixx="${wheel_ixx}" ixy="0" ixz="0" 
                 iyy="${wheel_iyy}" iyz="0" izz="${wheel_izz}"/>
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
    </link>

    <joint name="rear_wheel_${side}_joint" type="continuous">
      <parent link="chassis"/>
      <child link="rear_wheel_${side}"/>
      <origin xyz="${-wheelbase/2} ${reflect*track_width/2} ${-chassis_height/2}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <xacro:rear_wheel side="left" reflect="1"/>
  <xacro:rear_wheel side="right" reflect="-1"/>

  <!-- Camera -->
  <link name="camera_link">
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.001" ixy="0" ixz="0" 
               iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.03"/>
      </geometry>
      <material name="red"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.03"/>
      </geometry>
    </collision>
  </link>

  <joint name="camera_joint" type="fixed">
    <parent link="chassis"/>
    <child link="camera_link"/>
    <origin xyz="${chassis_length/2 - 0.05} 0 ${chassis_height/2 + 0.05}" rpy="0 0 0"/>
  </joint>

  <!-- IMU -->
  <link name="imu_link">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" 
               iyy="0.0001" iyz="0" izz="0.0001"/>
    </inertial>
  </link>

  <joint name="imu_joint" type="fixed">
    <parent link="chassis"/>
    <child link="imu_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <!-- Gazebo specific configurations -->
  <gazebo reference="chassis">
    <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo reference="front_wheel_left">
    <material>Gazebo/Black</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
  </gazebo>

  <gazebo reference="front_wheel_right">
    <material>Gazebo/Black</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
  </gazebo>

  <gazebo reference="rear_wheel_left">
    <material>Gazebo/Black</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
  </gazebo>

  <gazebo reference="rear_wheel_right">
    <material>Gazebo/Black</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
  </gazebo>

  <gazebo reference="camera_link">
    <material>Gazebo/Red</material>
    <sensor type="camera" name="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>600</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      </camera>
    </sensor>
  </gazebo>

  <gazebo reference="imu_link">
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
    </sensor>
  </gazebo>

  <!-- Ackermann steering plugin for Gazebo Harmonic -->
  <gazebo>
    <plugin filename="gz-sim-ackermann-steering-system" name="gz::sim::systems::AckermannSteering">
      <front_left_joint>front_wheel_left_joint</front_left_joint>
      <front_right_joint>front_wheel_right_joint</front_right_joint>
      <rear_left_joint>rear_wheel_left_joint</rear_left_joint>
      <rear_right_joint>rear_wheel_right_joint</rear_right_joint>
      <left_steering_joint>front_steering_left</left_steering_joint>
      <right_steering_joint>front_steering_right</right_steering_joint>
      <kingpin_width>0.3</kingpin_width>
      <wheelbase>0.25</wheelbase>
      <steering_limit>0.5236</steering_limit>
      <wheel_separation>0.3</wheel_separation>
      <wheel_radius>0.05</wheel_radius>
      <topic>/cmd_vel</topic>
      <odom_publish_frequency>50</odom_publish_frequency>
    </plugin>
  </gazebo>

  <!-- Joint state publisher plugin -->
  <gazebo>
    <plugin filename="gz-sim-joint-state-publisher-system" name="gz::sim::systems::JointStatePublisher">
      <joint_name>front_steering_left</joint_name>
      <joint_name>front_steering_right</joint_name>
      <joint_name>front_wheel_left_joint</joint_name>
      <joint_name>front_wheel_right_joint</joint_name>
      <joint_name>rear_wheel_left_joint</joint_name>
      <joint_name>rear_wheel_right_joint</joint_name>
    </plugin>
  </gazebo>

</robot>
